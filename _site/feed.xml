<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-31T10:12:49+10:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">tbrpggepp Development Blog</title><subtitle>Weekly development updates and ruminations on the &quot;Text-Based Role-Playing-Game Graphical Editor Plus Plus&quot;, or tbrpggepp for short.</subtitle><entry><title type="html">This Week in tbrpggepp #20</title><link href="http://localhost:4000/2020/07/31/n19.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #20" /><published>2020-07-31T00:00:00+10:00</published><updated>2020-07-31T00:00:00+10:00</updated><id>http://localhost:4000/2020/07/31/n19</id><content type="html" xml:base="http://localhost:4000/2020/07/31/n19.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;

&lt;p&gt;During the past week I have made the following progress:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Finished dia diagrams and psuedocode.&lt;/li&gt;
  &lt;li&gt;Wrote user manual pdf with LaTeX&lt;/li&gt;
  &lt;li&gt;Added online input to forms, had to split manual with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;standalone&lt;/code&gt; latex module so each form could have an individual .tex file and pdf which are then compiled into the main user manual&lt;/li&gt;
  &lt;li&gt;Completed “Testing and Maintaining the Solution” section&lt;/li&gt;
  &lt;li&gt;Checked through blogs and made corrections where necessary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;

&lt;p&gt;Resolved issue of being unable to create new terminal for game on windows by using “start /wait” command (from “https://stackoverflow.com/a/11615580”)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Tested this successfully on school computer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Encountered issue of program only being able to be ran in tbrpggepp directory due to usage of relative paths in program.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolved by pre-appending every use of a relative path with “os.path.normcase(os.path.dirname(os.path.realpath(&lt;strong&gt;file&lt;/strong&gt;)))” which returns the directory of the file being ran in normal case (ie. forward slashes rather than backslashes, identical between Linux and Windows)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Found an issue where the bubbleSort returns None if given an empty dict form, crashing the program&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolved by adding an if statement in bubblesort that automatically returns and empty list if given one&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Also could’ve been solved by adding a “return iterable” at the very end of the method after the main loop but that would have been less clear of a solution&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Found an issue where an if statement catching if the user was at the origin at editMovesTile (so the combobox could remove negative coord deltas) didn’t work&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Figured out that checking if the user was at the origin via the coords tile_dict value was shoddy, since if a new tile was being created the coords list was empty.&lt;/li&gt;
  &lt;li&gt;Resolved by changing the method of determing if the user was at the origin in editTileForm by grabbing the values from the coord value user input fields and passing the results of that to editMovesForm instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resolved mutltiple minor bugs including the editItem form opening with quantity=0 even if it was 1, this was because I set the default value to be 1 in the init form and if it was one it would skip the statement setting the input field to the passed quantity. Resolved by setting the default value to 0.&lt;/p&gt;

&lt;h2 id=&quot;design-requirements&quot;&gt;Design Requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Added tutorial.json game-world file to project directory, as an example for the user to edit off of.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;I learnt about all the dirname, realpath, normcase methods for the os.path library and the method of spawning new terminals in windows.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;Stack Overflow Answer:
&lt;img src=&quot;/assets/SOanswer.png&quot; alt=&quot;SO Answer&quot; /&gt;
&lt;img src=&quot;/assets/manual.png&quot; alt=&quot;manual&quot; /&gt;
&lt;img src=&quot;/assets/online_help.png&quot; alt=&quot;onlinehelp&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress:</summary></entry><entry><title type="html">This Week in tbrpggepp #19</title><link href="http://localhost:4000/2020/07/24/n19.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #19" /><published>2020-07-24T00:00:00+10:00</published><updated>2020-07-24T00:00:00+10:00</updated><id>http://localhost:4000/2020/07/24/n19</id><content type="html" xml:base="http://localhost:4000/2020/07/24/n19.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;The progress made this week consisted of the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Added docstrings to every function in the program and proper comments, while I still remember how everything works!&lt;/li&gt;
  &lt;li&gt;Added bubbleSort algorithmn to lstMovesValue in mainMenuForm, sorts moves alphabetically by their labels.&lt;/li&gt;
  &lt;li&gt;Started work on flowcharts and psuedocode in dia (did 4)&lt;/li&gt;
  &lt;li&gt;Implemented btnPlayGame for linux using os.system and os.path.dirname
An interesting tidbit is that the way i originally designed the text game is you pass to it the directory containing your world file rather than the file itself: this is useful because now it prevents the user from performing a shell injection attack&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Found an error wherein selecting an empty dmgtype in editEnemy or editItem would crash the program:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolved by adding an if statement to convert empty dmgtype enemy value to None, as it is represented in the json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Found an error where the program would crash if one tries to save a tile onto it when no file has been selected/created:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolved by adding an error message if the user attempts to save a tile before opening/creating a world file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Found an unneccessary error message appearing when the user cancels the file dialog in introForm:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolved by adding to the if clauses in the intro form so the user doesn’t get an error message if they don’t select a file (ie. cancelled the file dialog)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Found issue whereby tblWorldMap and game_world wouldn’t reset and reload after opening a new form from a preexisting one.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Resolved by adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self.game\_world = {}&lt;/code&gt; in actionOpenNewFile subroutine and loadWorldFile() in introForm.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Slightly modified Text_Game to fix how it iterates possible questlines: now skips directories in scandir and checks to be a json file.&lt;/li&gt;
  &lt;li&gt;Was unable to implement btnPlayGame for Windows despite fixing one issue: I assumed os.path would use the different directory slash separator. Now I need to figure out how to open new windows terminals with os.system().&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;design-refinements&quot;&gt;Design Refinements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Decided to limit scope of the project to disinclude git integration, since the user can simply do this this manually in a terminal if they wish. Not to mention they’d probably find that way easier.&lt;/li&gt;
  &lt;li&gt;Removed frivolous search bar from mainMenu that had not been given any functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Learnt about cross-platform methods of executing commands across Linux and Windows, with the subprocess library and the os library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/docstringsW12.png&quot; alt=&quot;docstrings&quot; /&gt;
&lt;img src=&quot;/assets/bubbleSortW12.png&quot; alt=&quot;bubble&quot; /&gt;
&lt;a href=&quot;/assets/editTileFormDia.png&quot;&gt;dia&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: The progress made this week consisted of the following: Added docstrings to every function in the program and proper comments, while I still remember how everything works! Added bubbleSort algorithmn to lstMovesValue in mainMenuForm, sorts moves alphabetically by their labels. Started work on flowcharts and psuedocode in dia (did 4) Implemented btnPlayGame for linux using os.system and os.path.dirname An interesting tidbit is that the way i originally designed the text game is you pass to it the directory containing your world file rather than the file itself: this is useful because now it prevents the user from performing a shell injection attack</summary></entry><entry><title type="html">This Week in tbrpggepp #18</title><link href="http://localhost:4000/2020/07/17/n18.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #18" /><published>2020-07-17T00:00:00+10:00</published><updated>2020-07-17T00:00:00+10:00</updated><id>http://localhost:4000/2020/07/17/n18</id><content type="html" xml:base="http://localhost:4000/2020/07/17/n18.html">&lt;h2 id=&quot;progress&quot;&gt;Progress&lt;/h2&gt;

&lt;p&gt;Throughout the holidays, I made the following progress:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Added call to delChildForms subroutine to cancel button on editTile form&lt;/li&gt;
  &lt;li&gt;Essentially completed building of UI files&lt;/li&gt;
  &lt;li&gt;Made table font bold for easier reading&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Completed feature of loading data into program and input fields.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Implemented code in editMoves form&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Created “propogateChange()” method in tile edit form such that changes made in the child forms can be “propogated” back to the parent and eventually to the main form&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Refactored saving sustem for tiles. Instead of each child form independently editing the wider game_world the child forms instead complete their respective components of the dictionary and send it back to the tile editing form. The tile editing form then compiles these changes and edits them into its copy of the game_world, then calls the mainMenu form to assimilate this game_world and write it to disk.&lt;/li&gt;
  &lt;li&gt;Refactored further such that the editTile form only edits the value of the individual tile entry and sends that back to an updateTile() method in the main menu&lt;/li&gt;
  &lt;li&gt;Added file saving and creation of new files in introForm&lt;/li&gt;
  &lt;li&gt;Changed tileClicked method such that coords showed up even when clicking on empty tiles and the coords appeared in the editTile form&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this state the program is perfectly usable with manual use of git and the text game. Next step is to integrate the two into the application.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;The problems and solutions I encountered during the holidays are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Encountered numerous issues in implementing such as info labels not updating due to forgetting you had to use setText() method, many other trivial issues&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Issue with opening edit tile form and passing tile object to class constructor, interpreter says passing too many arguments&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Issue resolved after much time by realizing I was accidently editing the item edit form, not the tile edit form.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Encountered an issue where changes would persist in the overall game world even if forms had the cancel (instead of the ‘save’) button clicked. Realized this was because of how Python handles references and the creation of new variables assigned preexisting variable values. Resolved by going into the init subroutine of each child form and replacing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self.game_world = game_world&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self.game_world = copy.deepcopy(game_world)&lt;/code&gt; which resolved the issue completely.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Issue saving tiles, change not appearing on world map&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Added a loop to remove tiles which overlap coordinates xor names with new ones, since tile names are used as keyID’s instead of coordinates (dumb mistake I made 2 years ago)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;May&lt;/em&gt; have just been forgetting to update tile_name with data from the object.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed an issue where tiles would still appear at their old coordinates by adding a clear() method to the start of the loadWorldFile() routine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Encountered an issue whereby even when cancelling the moves edit form or deleting a tile and reopening it, the moves_dict still persists in memory&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This was resolved by using deepcopys of sub-dicts for child forms, since Python is screwy in that what it calls variables are actually just funky pointers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;As thought, resuing a tile name completely deletes the initial tile. Added an error message in mainForm that also renames the new tile to a temporary random string for the user to manually rename (IF the coordinates between the two tiles differ)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;design-refinements&quot;&gt;Design Refinements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Added delete tile button to mainMenu form&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Had to relearn methods for json library in python, haven’t used since last year. json.dumps() and json.loads() and file access pointers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Learnt how to manipulate tables in pyqt5 for world-map-loading&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/0W11.png&quot; alt=&quot;cancel_form_delchild&quot; /&gt;
&lt;img src=&quot;/assets/refactorW11.png&quot; alt=&quot;refactoring saving system&quot; /&gt;
&lt;img src=&quot;/assets/moreW11.png&quot; alt=&quot;more refactoring saving system&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress</summary></entry><entry><title type="html">This Week in tbrpggepp #17</title><link href="http://localhost:4000/2020/06/19/n17.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #17" /><published>2020-06-19T00:00:00+10:00</published><updated>2020-06-19T00:00:00+10:00</updated><id>http://localhost:4000/2020/06/19/n17</id><content type="html" xml:base="http://localhost:4000/2020/06/19/n17.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week I created UI files for editEnemy, editItem, and editMoves forms. I updated UI files for editTile, introForm and mainMenu. I also added to sidebar in the mainMenu a listbox for displaying moves. I also started adding logic to determine whether to open item or enemy form depending on the tile type value in editMovesForm’s combobox, including greying out the add element button before combobox item is selected.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Essentially, I’ve resolved last week’s isssue of having different editTile forms for different room types by making “Edit Tile” only open &lt;strong&gt;one&lt;/strong&gt; type of form (editTileForm), which then has a greyed-out “Edit Element” button that changes its function depending on what tile type the user has selected in the combobox. Additionally, I also wasn’t sure how to incorporate the moves dict property into the Edit Tiles form as I had originally anticipated, since the relevant input fields and controls would be too large overall to fit on the editTile form; so I created another form (editMovesForm) and a button to open it in editTileForm.&lt;/p&gt;

&lt;h2 id=&quot;design-refinements&quot;&gt;Design Refinements&lt;/h2&gt;
&lt;p&gt;I created a seperate form for editing a tile’s move dict (editMoveForm) since the relevant fields would not fit on the editTileForm.&lt;/p&gt;

&lt;p&gt;I also created seperate forms for editing a tile’s enemy or item.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/editTileFormW8.png&quot; alt=&quot;Edit Tile Form Week 8&quot; /&gt;
&lt;img src=&quot;/assets/editMovesFormW8.png&quot; alt=&quot;Edit Moves Form Week 8&quot; /&gt;
&lt;img src=&quot;/assets/editItemFormW8.png&quot; alt=&quot;Edit Item Form Week 8&quot; /&gt;
&lt;img src=&quot;/assets/editEnemyFormW8.png&quot; alt=&quot;Edit Enemy Form Week 8&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week I created UI files for editEnemy, editItem, and editMoves forms. I updated UI files for editTile, introForm and mainMenu. I also added to sidebar in the mainMenu a listbox for displaying moves. I also started adding logic to determine whether to open item or enemy form depending on the tile type value in editMovesForm’s combobox, including greying out the add element button before combobox item is selected.</summary></entry><entry><title type="html">This Week in tbrpggepp #16</title><link href="http://localhost:4000/2020/06/12/n16.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #16" /><published>2020-06-12T00:00:00+10:00</published><updated>2020-06-12T00:00:00+10:00</updated><id>http://localhost:4000/2020/06/12/n16</id><content type="html" xml:base="http://localhost:4000/2020/06/12/n16.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week I completed (what a I thought was) the construction of and the naming of all the elements in all the forms for the project. I also managed to disabled editing on the game-world grid by removing edit its edit triggers as well. Additionally, I reorganized the folders and layout of the project directory to a more readable alternative, with a UI_Layouts directory for all the UI files.`&lt;/p&gt;

&lt;p&gt;I also added multi-form functionality to the program by performing ‘import’ on form classes, then assigning them to within the parent form objects and using show() method.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Fixed issue of non-adjusting-size widgets by reassigning all sub-widgets to the central widget with defined layout, adding margins as needed.&lt;/p&gt;

&lt;h2 id=&quot;design-refinements&quot;&gt;Design Refinements&lt;/h2&gt;
&lt;p&gt;I realized that since each room type has significantly varying parameters, I’ll have to construct a different editTile form for each room type and have the user select the room type for new rooms from the main menu. As a consequence of this I will have to add a “create room” button.&lt;/p&gt;

&lt;p&gt;However, I could have the “edit tile” button change text to create room if the highlighted tile isn’t created in the game world yet.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/editTileFormW7.png&quot; alt=&quot;Edit Tile Form Week 7&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week I completed (what a I thought was) the construction of and the naming of all the elements in all the forms for the project. I also managed to disabled editing on the game-world grid by removing edit its edit triggers as well. Additionally, I reorganized the folders and layout of the project directory to a more readable alternative, with a UI_Layouts directory for all the UI files.`</summary></entry><entry><title type="html">This Week in tbrpggepp #15</title><link href="http://localhost:4000/2020/06/05/n15.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #15" /><published>2020-06-05T00:00:00+10:00</published><updated>2020-06-05T00:00:00+10:00</updated><id>http://localhost:4000/2020/06/05/n15</id><content type="html" xml:base="http://localhost:4000/2020/06/05/n15.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week, I significantly built up the UI for mainMenu and introForm. I landed on a 1280x720 layout as a good middle ground for desktop applications, as the widgets weren’t made to appear too small.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;I had lots of trouble using qtcreator, especially when setting layouts. For example, for some reason one form’s central widget was somehow permanently set to a vertical layout while an otherwise identical form wasn’t. This eventually was resolved by using the ‘break layout’ button&lt;/p&gt;

&lt;p&gt;I had an issue with creating the game-world grid table within ‘scrollarea’ for the main form, where the scroll bars were not appearing. This was resolved by deleting ‘scrollarea’ and enabling scroll bars on the individual table widget.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;Learnt a method of opening file dialogs for PyQt5 from http://zetcode.com/gui/pyqt5/dialogs/ , used in introForm to create the “open file” dialog.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/mainMenuFormW6.png&quot; alt=&quot;Main Form Week 6&quot; /&gt;
&lt;img src=&quot;/assets/introFormW6.png&quot; alt=&quot;Intro Form Week 6&quot; /&gt;
&lt;img src=&quot;/assets/introFormCodeW6.png&quot; alt=&quot;Intro Form Code Week 6&quot; /&gt;
Code borrowed from zetcode.com:
&lt;img src=&quot;/assets/zetcode.png&quot; alt=&quot;zetcode&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week, I significantly built up the UI for mainMenu and introForm. I landed on a 1280x720 layout as a good middle ground for desktop applications, as the widgets weren’t made to appear too small.</summary></entry><entry><title type="html">This Week in tbrpggepp #14</title><link href="http://localhost:4000/2020/05/29/n14.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #14" /><published>2020-05-29T00:00:00+10:00</published><updated>2020-05-29T00:00:00+10:00</updated><id>http://localhost:4000/2020/05/29/n14</id><content type="html" xml:base="http://localhost:4000/2020/05/29/n14.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;It begins! This week marked the beginning of my actual implementation of tbrpgepp. Overall I managed to figure out that I would need to use a graphical UI designer (qtcreator) to create the look of each form, and then import those UI files into the Python program to add functionality to them. So far, I have created a very basic introForm UI file and introForm Python program.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Earlier in the week, before I realized I would have to use the UI file import method, I was very conflicted as to whether the program swould &lt;em&gt;start&lt;/em&gt; either by opening the mainMenu form which would then open a file dialog to open/create the game-world file, or whether an introForm would be used instead. Eventually I settled on the introForm option.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;I very quickly learnt this week that manually adding UI elements and effectively modifying their layout would be an abysmally time-consuming process. I learnt about UI files from this resource: https://www.learnpyqt.com/courses/qt-creator/first-steps-qt-creator/ and determined that this was the far more efficient option.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/mainFormW5.png&quot; alt=&quot;Main Form Week 5&quot; /&gt;
You can inevitably see how painful it would be to add and arrange every component of the UI in code by hand.
&lt;img src=&quot;/assets/W5.png&quot; alt=&quot;Intro Form with UI file Week 5&quot; /&gt;
Much easier.&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: It begins! This week marked the beginning of my actual implementation of tbrpgepp. Overall I managed to figure out that I would need to use a graphical UI designer (qtcreator) to create the look of each form, and then import those UI files into the Python program to add functionality to them. So far, I have created a very basic introForm UI file and introForm Python program.</summary></entry><entry><title type="html">This Week in tbrpggepp #13</title><link href="http://localhost:4000/2020/05/22/n13.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #13" /><published>2020-05-22T00:00:00+10:00</published><updated>2020-05-22T00:00:00+10:00</updated><id>http://localhost:4000/2020/05/22/n13</id><content type="html" xml:base="http://localhost:4000/2020/05/22/n13.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;Since returning to school two week ago from the throes of isolation I have been solely and ardently studying the PyQt5 cross-platform Desktop framework. This hurried fervour was acquired after I returned to school and achieved an acutely painful realization: namely, that I had absolutely no clue how to create a desktop application outside of Visual Basic.&lt;/p&gt;

&lt;p&gt;In the last two weeks I’ve created three small desktop programs that make good use of the principles of PyQt5 (connections, layouts, slots), which I learnt how to create from an ebook on PyQt5 (https://gumroad.com/l/pysqtsamples).&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;True fans of tbrpggepp know that ever since 2019 I’ve had in my posession an ebook relating to PyQt: unfortunately, that book was for PyQt4 instead of PyQt5; this introduced numerous incongruent differences which I became acutely aware of after attempting to implement the examples in the book. For example, connections are handled in a particularly messy manner in PyQt4 which is made significantly more elegant in its predecessor. The names of classes are different between the two library versions, etc.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;In the last two weeks I’ve essentially learnt a desktop framework from scratch. I know how to create and execute forms, create functionality in UI elements, and link forms together in a program. I feel somewhat prepared for beginning to create the major project itself.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;My first three “real” desktop programs made by hand, in order:
&lt;img src=&quot;/assets/alert.png&quot; alt=&quot;Alert&quot; /&gt;
&lt;img src=&quot;/assets/calc.png&quot; alt=&quot;Calc&quot; /&gt;
&lt;img src=&quot;/assets/currency_conv.png&quot; alt=&quot;Currency conv&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: Since returning to school two week ago from the throes of isolation I have been solely and ardently studying the PyQt5 cross-platform Desktop framework. This hurried fervour was acquired after I returned to school and achieved an acutely painful realization: namely, that I had absolutely no clue how to create a desktop application outside of Visual Basic.</summary></entry><entry><title type="html">This Week in tbrpggepp #12: COVID Special</title><link href="http://localhost:4000/2020/05/08/n12.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #12: COVID Special" /><published>2020-05-08T00:00:00+10:00</published><updated>2020-05-08T00:00:00+10:00</updated><id>http://localhost:4000/2020/05/08/n12</id><content type="html" xml:base="http://localhost:4000/2020/05/08/n12.html">&lt;h2 id=&quot;covid-19-aka-the-dark-ages&quot;&gt;COVID-19: AKA The Dark Ages&lt;/h2&gt;

&lt;p&gt;From the end of the Major Project Designing and Planning submission to the end of Week 2 Term 2, we were all left in effective isolation with only the mere threat of a Major Project submission yet another term on the horizon to keep us at bay. Safe to say, not a lot of SDD work was conducted by me personally during this period, aside from the sporadic reading of my PyQt4 textbook, which would fall under the “Learning” section of this post. That aside, below lies the transcript of an interview between Me, the Developer; and Me, the Client.&lt;/p&gt;

&lt;p&gt;Developer: What are you looking for out of this project?&lt;/p&gt;

&lt;p&gt;Client: Throughout the years I’ve created many text-based adventure games for work and leisure, yet every time I create a game I have to manually edit vast and clunky json files by hand. My hope for tbrpggepp is that it will make the creation of such games orders of magnitudes easier and more intuitive.&lt;/p&gt;

&lt;p&gt;Developer: What platform do you want the project to release on?&lt;/p&gt;

&lt;p&gt;Client: The program has to sufficiently cross-platform in nature such that it may be ran on both Linux and Windows. Mac OS would be a nice touch.&lt;/p&gt;

&lt;p&gt;Developer: How should the project be released?&lt;/p&gt;

&lt;p&gt;Client: As a libre software product, the program should be distributed by publicly releasing the source code on a site such as GitHub&lt;/p&gt;

&lt;p&gt;Developer: Are you satisfied by the User Interface mockups we’ve created so far?&lt;/p&gt;

&lt;p&gt;Client: They look astounding, it’s almost as if I wrote them myself.&lt;/p&gt;</content><author><name></name></author><summary type="html">COVID-19: AKA The Dark Ages</summary></entry><entry><title type="html">This Week in tbrpggepp #11</title><link href="http://localhost:4000/2020/03/27/n11.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #11" /><published>2020-03-27T00:00:00+11:00</published><updated>2020-03-27T00:00:00+11:00</updated><id>http://localhost:4000/2020/03/27/n11</id><content type="html" xml:base="http://localhost:4000/2020/03/27/n11.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;School shut down last week due to Covid-19 and didn’t begin online lessons until this week. I feel as if were I in any stage of my schooling life this would be a great joy, but the fact I’m doing my HSC this year leaves me with some quite mixed feelings. Nevertheless, this was the week of submission for the Planning and Designing component of the major task, and of course brought with it a mad rush. During the last two weeks I managed to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Update my Context Diagram&lt;/li&gt;
  &lt;li&gt;Update my Data Flow Diagram&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my Data Dictionary&lt;/li&gt;
  &lt;li&gt;Create my UI design mockups and the Storyboard connecting them&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my IPO Chart&lt;/li&gt;
  &lt;li&gt;Refined my problem statement&lt;/li&gt;
  &lt;li&gt;Wrote the section on development approach&lt;/li&gt;
  &lt;li&gt;Wrote the section on System Documentation justification&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my social and ethical issues discussion&lt;/li&gt;
  &lt;li&gt;Manage to publish a few of my blogs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problems-and-learning&quot;&gt;Problems and Learning&lt;/h2&gt;
&lt;p&gt;Crunch time is never particularly enjoyable, but by far the worst part of this week was attempting to get the blog site running in the final few minutes before project submission. Having to install Ruby with all its cruft and a handful of broken Gems with arcane error messages as a last-ditch resort after attempting to convert markdown to html manually was a particularly educational experience, yet I managed to get the website up and running on GitHub pages a mere few minutes after the project deadline submission.&lt;/p&gt;

&lt;p&gt;There were no particular issues with the project work itself I undertook, aside from the fact that is is extremely time consuming and labourious. Creating the UI mockups however gave me a greater understanding of I intend my project to look and the nature of its individual components.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/ui_combo.png&quot; alt=&quot;UI Combo&quot; /&gt;
&lt;img src=&quot;/assets/dd_and_social.png&quot; alt=&quot;Data Dictionary and Social and Ethical Issues Changes&quot; /&gt;
&lt;img src=&quot;/assets/githubio.png&quot; alt=&quot;Blog post site&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: School shut down last week due to Covid-19 and didn’t begin online lessons until this week. I feel as if were I in any stage of my schooling life this would be a great joy, but the fact I’m doing my HSC this year leaves me with some quite mixed feelings. Nevertheless, this was the week of submission for the Planning and Designing component of the major task, and of course brought with it a mad rush. During the last two weeks I managed to: Update my Context Diagram Update my Data Flow Diagram Expand significantly upon my Data Dictionary Create my UI design mockups and the Storyboard connecting them Expand significantly upon my IPO Chart Refined my problem statement Wrote the section on development approach Wrote the section on System Documentation justification Expand significantly upon my social and ethical issues discussion Manage to publish a few of my blogs.</summary></entry></feed>