<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-31T05:24:06+10:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">tbrpggepp Development Blog</title><subtitle>Weekly development updates and ruminations on the &quot;Text-Based Role-Playing-Game Graphical Editor Plus Plus&quot;, or tbrpggepp for short.</subtitle><entry><title type="html">This Week in tbrpggepp #13</title><link href="http://localhost:4000/2020/05/15/n13.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #13" /><published>2020-05-15T00:00:00+10:00</published><updated>2020-05-15T00:00:00+10:00</updated><id>http://localhost:4000/2020/05/15/n13</id><content type="html" xml:base="http://localhost:4000/2020/05/15/n13.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;Since returning to school a week ago from the throes of isolation I have been solely and ardently studying the PyQt5 cross-platform Desktop framework. This hurried fervour was acquired after I returned to school and achieved an acutely painful realization: namely, that I had absolutely no clue how to create a desktop application outside of Visual Basic.&lt;/p&gt;

&lt;p&gt;In the last week I’ve created three small desktop programs that make good use of the principles of PyQt5 (connections, layouts, slots), which I learnt how to create from an ebook on PyQt5 (https://gumroad.com/l/pysqtsamples).&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;True fans of tbrpggepp know that ever since 2019 I’ve had in my posession an ebook relating to PyQt: unfortunately, that book was for PyQt4 instead of PyQt5; this introduced numerous incongruent differences which I became acutely aware of after attempting to implement the examples in the book. For example, connections are handled in a particularly messy manner in PyQt4 which is made significantly more elegant in its predecessor. The names of classes are different between the two library versions, etc.&lt;/p&gt;

&lt;h1 id=&quot;learning&quot;&gt;Learning&lt;/h1&gt;
&lt;p&gt;In the last two weeks I’ve essentially learnt a desktop framework from scratch. I know how to create and execute forms, create functionality in UI elements, and link forms together in a program. I feel somewhat prepared for beginning to create the major project itself.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;My first three “real” desktop programs made by hand, in order:
&lt;img src=&quot;/assets/alert.png&quot; alt=&quot;Alert&quot; /&gt;
&lt;img src=&quot;/assets/calc.png&quot; alt=&quot;Calc&quot; /&gt;
&lt;img src=&quot;/assets/currency_conv.png&quot; alt=&quot;Currency conv&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: Since returning to school a week ago from the throes of isolation I have been solely and ardently studying the PyQt5 cross-platform Desktop framework. This hurried fervour was acquired after I returned to school and achieved an acutely painful realization: namely, that I had absolutely no clue how to create a desktop application outside of Visual Basic.</summary></entry><entry><title type="html">This Week in tbrpggepp #12</title><link href="http://localhost:4000/2020/05/08/n12.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #12" /><published>2020-05-08T00:00:00+10:00</published><updated>2020-05-08T00:00:00+10:00</updated><id>http://localhost:4000/2020/05/08/n12</id><content type="html" xml:base="http://localhost:4000/2020/05/08/n12.html">&lt;h2 id=&quot;covid-19-aka-the-dark-ages&quot;&gt;COVID-19: AKA The Dark Ages&lt;/h2&gt;

&lt;p&gt;From the end of the Major Project Designing and Planning submission to the end of Week 2 Term 2, we were all left in effective isolation with only the mere threat of a Major Project submission yet another term on the horizon to keep us at bay. Safe to say, not a lot of SDD work was conducted by me personally during this period, aside from the sporadic reading of my PyQt4 textbook. Instead of providing a Progress/Problems/Learning blog post for this period, I will instead insert the transcript of a mock interview between me, the Developer and Me, the client.&lt;/p&gt;

&lt;p&gt;Developer: What are you looking for in this program and what is your motivation for commissioning it?
Client: &lt;em&gt;Throughout the years I’ve created many text-based adventure games for work and leisure, yet every time I create a game I have to manually edit vast and clunky json files by hand. My hope for tbrpggepp is that it will make the creation of such games orders of magnitudes easier and more intuitive.&lt;/em&gt;
Developer: What platform do you want us to release the program to?
Client: &lt;em&gt;The program has to sufficiently cross-platform in nature such that it may be ran on both Linux and Windows. Mac OS would be a nice touch.&lt;/em&gt;
Developer: How should we release the program?
Client: &lt;em&gt;As a libre software product, the program should be distributed by publicly releasing the source code on a site such as GitHub&lt;/em&gt;
Developer: Are you satisfied by the User Interface mockups we’ve created so far?
Client: &lt;em&gt;They look so good, it’s as if I wrote them myself.&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">COVID-19: AKA The Dark Ages</summary></entry><entry><title type="html">This Week in tbrpggepp #11</title><link href="http://localhost:4000/2020/03/27/n11.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #11" /><published>2020-03-27T00:00:00+11:00</published><updated>2020-03-27T00:00:00+11:00</updated><id>http://localhost:4000/2020/03/27/n11</id><content type="html" xml:base="http://localhost:4000/2020/03/27/n11.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;School shut down last week due to Covid-19 and didn’t begin online lessons until this week. I feel as if were I in any stage of my schooling life this would be a great joy, but the fact I’m doing my HSC this year leaves me with some quite mixed feelings. Nevertheless, this was the week of submission for the Planning and Designing component of the major task, and of course brought with it a mad rush. During the last two weeks I managed to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Update my Context Diagram&lt;/li&gt;
  &lt;li&gt;Update my Data Flow Diagram&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my Data Dictionary&lt;/li&gt;
  &lt;li&gt;Create my UI design mockups and the Storyboard connecting them&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my IPO Chart&lt;/li&gt;
  &lt;li&gt;Refined my problem statement&lt;/li&gt;
  &lt;li&gt;Wrote the section on development approach&lt;/li&gt;
  &lt;li&gt;Wrote the section on System Documentation justification&lt;/li&gt;
  &lt;li&gt;Expand significantly upon my social and ethical issues discussion&lt;/li&gt;
  &lt;li&gt;Manage to publish a few of my blogs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problems-and-learning&quot;&gt;Problems and Learning&lt;/h2&gt;
&lt;p&gt;Crunch time is never particularly enjoyable, but by far the worst part of this week was attempting to get the blog site running in the final few minutes before project submission. Having to install Ruby with all its cruft and a handful of broken Gems with arcane error messages as a last-ditch resort after attempting to convert markdown to html manually was a particularly educational experience, yet I managed to get the website up and running on GitHub pages a mere few minutes after the project deadline submission.&lt;/p&gt;

&lt;p&gt;There were no particular issues with the project work itself I undertook, aside from the fact that is is extremely time consuming and labourious. Creating the UI mockups however gave me a greater understanding of I intend my project to look and the nature of its individual components.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/ui_combo.png&quot; alt=&quot;UI Combo&quot; /&gt;
&lt;img src=&quot;/assets/dd_and_social.png&quot; alt=&quot;Data Dictionary and Social and Ethical Issues Changes&quot; /&gt;
&lt;img src=&quot;/assets/githubio.png&quot; alt=&quot;Blog post site&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: School shut down last week due to Covid-19 and didn’t begin online lessons until this week. I feel as if were I in any stage of my schooling life this would be a great joy, but the fact I’m doing my HSC this year leaves me with some quite mixed feelings. Nevertheless, this was the week of submission for the Planning and Designing component of the major task, and of course brought with it a mad rush. During the last two weeks I managed to: Update my Context Diagram Update my Data Flow Diagram Expand significantly upon my Data Dictionary Create my UI design mockups and the Storyboard connecting them Expand significantly upon my IPO Chart Refined my problem statement Wrote the section on development approach Wrote the section on System Documentation justification Expand significantly upon my social and ethical issues discussion Manage to publish a few of my blogs.</summary></entry><entry><title type="html">This Week in tbrpggepp #10</title><link href="http://localhost:4000/2020/03/13/n10.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #10" /><published>2020-03-13T00:00:00+11:00</published><updated>2020-03-13T00:00:00+11:00</updated><id>http://localhost:4000/2020/03/13/n10</id><content type="html" xml:base="http://localhost:4000/2020/03/13/n10.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;During this week we covered the theory content of multidimensional arrays, which I suspect may be useful in the future implementation of my project which will prominently feature a large 2D grid. I started putting real progress towards my currently-undecided method of publishing blogs. Unfortunately I spend a fair chunk of the week at home due to illness, therefore little other progress was made.&lt;/p&gt;
&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;One of the things I want to get away from most during this project is Blogger. Frankly, its interface was always a chore to use, especially the uploading of images; and I’ve long held the notion in my mind that I’ll eventually create a website on the open web. I’m looking at multiple options, such as self-hosting a site on my homeserver or using GitHub pages; but underlying this I believe I’ll use a static site generator like Jekyll or Hugo to generate html out of markdown files. I’ve made this decision because markdown is beautifully simple to format and edit, and using a big messy program like a static site generator sounds like a fair bit of fun.&lt;/p&gt;
&lt;h1 id=&quot;learning&quot;&gt;Learning&lt;/h1&gt;
&lt;p&gt;Learned about static-site generator systems for blog-website manufacturing, such as Jekyll or Hugo. Both are open-source and give large degrees of freedom regarding styles and customisation and look quite appealing compared to Google’s alternative.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;This is the format template I’m using for my markdown blog posts (including this one), which I currently all have saved to disk until I determine a hosting solution.
&lt;img src=&quot;/assets/blogpost.png&quot; alt=&quot;Blog Post Markdown Format&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: During this week we covered the theory content of multidimensional arrays, which I suspect may be useful in the future implementation of my project which will prominently feature a large 2D grid. I started putting real progress towards my currently-undecided method of publishing blogs. Unfortunately I spend a fair chunk of the week at home due to illness, therefore little other progress was made. Problems One of the things I want to get away from most during this project is Blogger. Frankly, its interface was always a chore to use, especially the uploading of images; and I’ve long held the notion in my mind that I’ll eventually create a website on the open web. I’m looking at multiple options, such as self-hosting a site on my homeserver or using GitHub pages; but underlying this I believe I’ll use a static site generator like Jekyll or Hugo to generate html out of markdown files. I’ve made this decision because markdown is beautifully simple to format and edit, and using a big messy program like a static site generator sounds like a fair bit of fun. Learning Learned about static-site generator systems for blog-website manufacturing, such as Jekyll or Hugo. Both are open-source and give large degrees of freedom regarding styles and customisation and look quite appealing compared to Google’s alternative.</summary></entry><entry><title type="html">This Week in tbrpggepp #9</title><link href="http://localhost:4000/2020/03/06/n9.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #9" /><published>2020-03-06T00:00:00+11:00</published><updated>2020-03-06T00:00:00+11:00</updated><id>http://localhost:4000/2020/03/06/n9</id><content type="html" xml:base="http://localhost:4000/2020/03/06/n9.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;Yet another theory content based week: we largely spent the time reviewing string processing. I finished up my C sorting prac from last week and worked on my second Gantt chart, my structure chart, and my flowchart. I tweaked the text of the social and ethical issues justification section somewhat as well.&lt;/p&gt;
&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Resolved the dilemma of representing event-driven user action in the flowchart by consulting with my teacher, who told me that simply displaying the linear path of the flowchart with loops inserted is fine. I was quite proud of myself that I could present the option of clicking “Online Help” at any time in my structure chart by putting a choice symbol over the line without a second option - meaning the user can choose to use or not to use the Online Help at any time.&lt;/p&gt;
&lt;h1 id=&quot;learning&quot;&gt;Learning&lt;/h1&gt;
&lt;p&gt;Revision of string processing included common processes such as extracting, deleting, inserting, and concatenation. In C, strings are simply pure arrays that contain integers corresponding to characters: this simple fact reduces the complexity of the topic quite drasticaly.&lt;/p&gt;

&lt;p&gt;Completing the sorting prac from last week in C from scratch aided in my understanding of the sorting algorithms quite effectively as well.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/sort2.png&quot; alt=&quot;Finished Sort C Prac Code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assests/gantt_chart_1.png&quot; alt=&quot;Second Gantt Chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assests/strings.png&quot; alt=&quot;Strings Prac&quot; /&gt;
The side-effect of spending so long working on your sorting prac is that it leaves very little time for your string processing prac.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assests/SystemFlowchart.png&quot; alt=&quot;Second Iteration Flowchart&quot; /&gt;
&lt;img src=&quot;/assests/StructureChart.png&quot; alt=&quot;Second Iteration Structure Chart&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: Yet another theory content based week: we largely spent the time reviewing string processing. I finished up my C sorting prac from last week and worked on my second Gantt chart, my structure chart, and my flowchart. I tweaked the text of the social and ethical issues justification section somewhat as well. Problems Resolved the dilemma of representing event-driven user action in the flowchart by consulting with my teacher, who told me that simply displaying the linear path of the flowchart with loops inserted is fine. I was quite proud of myself that I could present the option of clicking “Online Help” at any time in my structure chart by putting a choice symbol over the line without a second option - meaning the user can choose to use or not to use the Online Help at any time. Learning Revision of string processing included common processes such as extracting, deleting, inserting, and concatenation. In C, strings are simply pure arrays that contain integers corresponding to characters: this simple fact reduces the complexity of the topic quite drasticaly.</summary></entry><entry><title type="html">This Week in tbrpggepp #8</title><link href="http://localhost:4000/2020/02/28/n8.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #8" /><published>2020-02-28T00:00:00+11:00</published><updated>2020-02-28T00:00:00+11:00</updated><id>http://localhost:4000/2020/02/28/n8</id><content type="html" xml:base="http://localhost:4000/2020/02/28/n8.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week we mostly covered theory content relating to insertion, bubble, and selection sorting. We performed multiple exam questions during class and I got working on my data dictionary. I got started on an implementation of the sorting algorithms in C.&lt;/p&gt;
&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;Didn’t encounter many problems this week, as were were mostly conducting theory work. I found it quite difficult to remember exactly which name referred to which algorithm, though.&lt;/p&gt;
&lt;h1 id=&quot;learning&quot;&gt;Learning&lt;/h1&gt;
&lt;p&gt;The specifics of Insertion and Selection Sort were somewhat new to me, but it was entertaining to derive the time complexity for both of them by hand.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/sort.png&quot; alt=&quot;Sort C Prac Code&quot; /&gt;
As one may say, I didn’t get so far in the specifics of the algorithm implementation this week.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/early_datadict.png&quot; alt=&quot;Data Dictionary&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week we mostly covered theory content relating to insertion, bubble, and selection sorting. We performed multiple exam questions during class and I got working on my data dictionary. I got started on an implementation of the sorting algorithms in C. Problems Didn’t encounter many problems this week, as were were mostly conducting theory work. I found it quite difficult to remember exactly which name referred to which algorithm, though. Learning The specifics of Insertion and Selection Sort were somewhat new to me, but it was entertaining to derive the time complexity for both of them by hand.</summary></entry><entry><title type="html">This Week in tbrpggepp #7</title><link href="http://localhost:4000/2020/02/21/n7.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #7" /><published>2020-02-21T00:00:00+11:00</published><updated>2020-02-21T00:00:00+11:00</updated><id>http://localhost:4000/2020/02/21/n7</id><content type="html" xml:base="http://localhost:4000/2020/02/21/n7.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;Progress this week largely consisted of theory work and little direct project development. I worked mostly on practical tasks involving 120 lines of searching algorithms written by hand in minimalistic C.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;This was the first moderately-sized program I’ve ever written in C, so it was initially exceedingly difficult to figure out how to do things like read standard input and append values to variable-length arrays. I found a solution to the latter problem from Klas Lindback on Stack Overflow and by consulting documentation and online sources figured out how to read stdin with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fgets()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I had a big problem with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sizeOf()&lt;/code&gt; function when used to determine the size of an array that is passed as a pointer variable to a subroutine, since in that specific case the function just returned the size of the pointer itself rather than the actual array it points to the beginning of. This was resolved by defining ARRAY_SIZE as a constant in the program and circumventing the need to calculate the size of the array in the first place.&lt;/p&gt;

&lt;p&gt;Another issue was when I attempted to evaluate equivalency between a very large string read from stdin to smaller strings presented as ‘commands’. This was easily solved (after some time) by subtracting 1 from the compared string upper character index, since C appends 0 to every string as a null-terminator.&lt;/p&gt;

&lt;h1 id=&quot;learning&quot;&gt;Learning&lt;/h1&gt;

&lt;p&gt;Aside from the writing in C, the rest of the theory work for this week largely consisted of revision. We encountered the concepts of algorithmic time complexity, linear search, and binary search in class, all of which I was previously familiar with.&lt;/p&gt;

&lt;h2 id=&quot;help&quot;&gt;Help&lt;/h2&gt;

&lt;p&gt;Copied a C function from an answer made by Klas Lindback on Stack Overflow that can be used to ‘append’ a value to the end of an array up to a fixed length.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/search.png&quot; alt=&quot;Linear and binary search code&quot; /&gt;
&lt;img src=&quot;/assets/search_out.png&quot; alt=&quot;Linear and binary search program in use&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: Progress this week largely consisted of theory work and little direct project development. I worked mostly on practical tasks involving 120 lines of searching algorithms written by hand in minimalistic C.</summary></entry><entry><title type="html">This Week in tbrpggepp #6</title><link href="http://localhost:4000/2020/02/14/n6.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #6" /><published>2020-02-14T00:00:00+11:00</published><updated>2020-02-14T00:00:00+11:00</updated><id>http://localhost:4000/2020/02/14/n6</id><content type="html" xml:base="http://localhost:4000/2020/02/14/n6.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week I worked on further system modelling, including the structure chart and system flowchart.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;I didn’t manage to finish the structure chart this week, the parameters were left incomplete. I’m not sure how to complete the system flowchart while representing the loop of event-driven user choice branching the main form.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;I worked on system modelling HSC exam questions during class for revision and to refine my understanding. I learnt a bit about execution stacks in lower level system programming, since structure charts seem to be a kind of visualisation of an execution stack over time.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/early_flowchart.png&quot; alt=&quot;Early iteration of system flowchart&quot; /&gt;
&lt;img src=&quot;/assets/early_struct.png&quot; alt=&quot;Early iteration of system structure chart&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week I worked on further system modelling, including the structure chart and system flowchart.</summary></entry><entry><title type="html">This Week in tbrpggepp #5</title><link href="http://localhost:4000/2020/02/07/n5.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #5" /><published>2020-02-07T00:00:00+11:00</published><updated>2020-02-07T00:00:00+11:00</updated><id>http://localhost:4000/2020/02/07/n5</id><content type="html" xml:base="http://localhost:4000/2020/02/07/n5.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;This week I revised and worked on system modelling including context diagrams and the data flow diagram for the desktop application.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;I didn’t encounter any issues this week, it was pretty smooth sailing.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;I revised in-class and and off the preliminary textbook the graphical system modelling tools like context diagrams and data flow diagrams, which seem like more simplistic versions of non-deterministic finite state automata. I was pleased to find out Dia ran natively on my GNU/Linux machine, and was even more pleased to find out that Dia itself is a part of the GNU project! It turns out Dia is Free Software (in the sense of freedom, not price) and is licensed under version 3 or later of the GPL.&lt;/p&gt;

&lt;h2 id=&quot;refinements&quot;&gt;Refinements&lt;/h2&gt;
&lt;p&gt;While working out the system modelling tools I decided the application should have a definitive ‘save’ feature which would do more than write a JSON file to disk. This could be a commit to a local git repository but I’m undecided. I have also decided to integrate the game-playing command line application with the game-designing desktop application, which will run in another form. These are all shown as processes in the data flow diagram.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/context.png&quot; alt=&quot;Context Diagram&quot; /&gt;
&lt;img src=&quot;/assets/dfd.png&quot; alt=&quot;DFD Diagram&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: This week I revised and worked on system modelling including context diagrams and the data flow diagram for the desktop application.</summary></entry><entry><title type="html">This Week in tbrpggepp #4</title><link href="http://localhost:4000/2020/01/31/n4.html" rel="alternate" type="text/html" title="This Week in tbrpggepp #4" /><published>2020-01-31T00:00:00+11:00</published><updated>2020-01-31T00:00:00+11:00</updated><id>http://localhost:4000/2020/01/31/n4</id><content type="html" xml:base="http://localhost:4000/2020/01/31/n4.html">&lt;h2 id=&quot;progress&quot;&gt;Progress:&lt;/h2&gt;
&lt;p&gt;Similarly to the last update, this week was on the border of a term and having school start on a Wednesday means relatively little progress was made. The progress I did make was a rough start on the IPO chart.&lt;/p&gt;

&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;It’s somewhat difficult to make an IPO chart for an application you haven’t developed yet, but I’ve attempted to imagine the inputs the user would make and how the application would respond in the general sense. I feel that I won’t know exactly what the inputs and processes are until I’ve completed developing the application, however I’m going to have to work through this as the documentation is due before the code.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;
&lt;p&gt;Over the holidays I came across a great source of programming/IT PDFs and ebooks, so this week I’ve been reading through “Rapid GUI Programming with Python and Qt” by Mark Summerfield this week. At the start of the project I wasn’t aware of PyQt, a Python 2/3 binding of Qt that would allow me to develop the application without having to learn C++, only costing a minor hit to performance. I know that one of my favourite desktop applications, Qutebrowser, is written in PyQt.&lt;/p&gt;

&lt;h2 id=&quot;refinements&quot;&gt;Refinements&lt;/h2&gt;
&lt;p&gt;I might decide to implement the project with Python3 and PyQt rather than C++ and bare Qt.&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/ipo.png&quot; alt=&quot;IPO chart mockup&quot; /&gt;
&lt;img src=&quot;/assets/pyqt_book.png&quot; alt=&quot;A Page from the PyQt Programming Book&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Progress: Similarly to the last update, this week was on the border of a term and having school start on a Wednesday means relatively little progress was made. The progress I did make was a rough start on the IPO chart.</summary></entry></feed>